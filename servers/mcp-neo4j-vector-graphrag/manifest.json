{
  "dxt_version": "0.1",
  "name": "mcp-neo4j-vector-graphrag",
  "display_name": "Neo4j Vector GraphRAG MCP Server",
  "version": "0.1.0",
  "description": "Execute vector similarity searches with graph traversal on your Neo4j database using the GraphRAG Python package.",
  "long_description": "A Model Context Protocol (MCP) server that provides vector similarity search capabilities enhanced with graph traversal using the Neo4j GraphRAG Python package. Uses VectorCypherRetriever to perform semantic search and custom Cypher queries for comprehensive knowledge graph retrieval.",
  "author": {
    "name": "Tomaz Bratanic"
  },
  "keywords": ["neo4j", "graphrag", "vector", "search", "graph", "database", "mcp", "ai", "llm", "cypher", "retrieval"],
  "categories": ["database", "graph", "search", "vector", "retrieval"],
  "repository": {
    "type": "git",
    "url": "https://github.com/tomasonjo-labs/neo4j-mcp-experiments/tree/main/servers/mcp-neo4j-vector-graphrag"
  },
  "documentation": "https://github.com/tomasonjo-labs/neo4j-mcp-experiments/blob/main/servers/mcp-neo4j-vector-graphrag/README.md",
  "support": "https://github.com/tomasonjo-labs/neo4j-mcp-experiments/issues",
  "server": {
    "type": "python",
    "entry_point": "src/mcp_neo4j_vector_graphrag/__init__.py",
    "mcp_config": {
      "command": "uvx",
      "args": ["mcp-neo4j-vector-graphrag"],
      "env": {
        "NEO4J_URI": "${user_config.neo4j_uri}",
        "NEO4J_USERNAME": "${user_config.neo4j_username}",
        "NEO4J_PASSWORD": "${user_config.neo4j_password}",
        "NEO4J_DATABASE": "${user_config.neo4j_database}",
        "NEO4J_INDEX_NAME": "${user_config.neo4j_index_name}",
        "EMBEDDING_MODEL": "${user_config.embedding_model}",
        "RETRIEVAL_QUERY": "${user_config.retrieval_query}",
        "NEO4J_TRANSPORT": "${user_config.transport}",
        "NEO4J_NAMESPACE": "${user_config.neo4j_namespace}",
        "NEO4J_MCP_SERVER_HOST": "${user_config.mcp_server_host}",
        "NEO4J_MCP_SERVER_PORT": "${user_config.mcp_server_port}",
        "NEO4J_MCP_SERVER_PATH": "${user_config.mcp_server_path}"
      }
    }
  },
  "tools": [
    {
      "name": "neo4j_vector",
      "description": "Find relevant documents based on natural language input using vector similarity search enhanced with graph traversal"
    }
  ],
  "prompts": [],
  "tools_generated": false,
  "license": "MIT",
  "user_config": {
    "neo4j_uri": {
      "type": "string",
      "title": "Neo4j URI",
      "description": "The URI for connecting to Neo4j",
      "default": "bolt://localhost:7687",
      "required": true,
      "sensitive": false
    },
    "neo4j_username": {
      "type": "string",
      "title": "Neo4j Username",
      "description": "The username for logging into Neo4j",
      "default": "neo4j",
      "required": true,
      "sensitive": false
    },
    "neo4j_password": {
      "type": "string",
      "title": "Neo4j Password",
      "description": "The password for logging into Neo4j",
      "default": "password",
      "required": true,
      "sensitive": true
    },
    "neo4j_database": {
      "type": "string",
      "title": "Neo4j Database",
      "description": "The database to use in Neo4j, defaults to neo4j",
      "default": "neo4j",
      "required": false,
      "sensitive": false
    },
    "neo4j_index_name": {
      "type": "string",
      "title": "Vector Index Name",
      "description": "The name of the vector index to search against",
      "default": "vector_index",
      "required": true,
      "sensitive": false
    },
    "embedding_model": {
      "type": "string",
      "title": "Embedding Model",
      "description": "The embedding model to use (e.g., 'openai:text-embedding-3-small', 'sentence-transformers/all-MiniLM-L6-v2')",
      "default": "openai:text-embedding-3-small",
      "required": true,
      "sensitive": false
    },
    "retrieval_query": {
      "type": "string",
      "title": "Retrieval Query",
      "description": "Custom Cypher query for graph traversal after vector search. Use 'node' variable to reference found nodes.",
      "default": "RETURN node.text as content",
      "required": true,
      "sensitive": false
    },
    "neo4j_namespace": {
      "type": "string",
      "title": "Namespace",
      "description": "An optional namespace for the MCP server tools",
      "default": "",
      "required": false,
      "sensitive": false
    },
    "transport": {
      "type": "string",
      "title": "Transport",
      "description": "The MCP transport, defaults to stdio",
      "default": "stdio",
      "required": false,
      "sensitive": false
    },
    "mcp_server_host": {
      "type": "string",
      "title": "MCP Server Host",
      "description": "The host for the MCP server, if not using stdio. Defaults to 127.0.0.1",
      "default": "127.0.0.1",
      "required": false,
      "sensitive": false
    },
    "mcp_server_port": {
      "type": "number",
      "title": "MCP Server Port",
      "description": "The port for the MCP server, if not using stdio. Defaults to 8000",
      "default": 8000,
      "required": false,
      "sensitive": false
    },
    "mcp_server_path": {
      "type": "string",
      "title": "MCP Server Path",
      "description": "The path for the MCP server, if not using stdio. Defaults to /mcp/",
      "default": "/mcp/",
      "required": false,
      "sensitive": false
    }
  }
}